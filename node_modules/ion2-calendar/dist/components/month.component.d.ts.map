{"version":3,"file":"month.component.d.ts","sources":["month.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, AfterViewInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { CalendarDay, CalendarMonth, CalendarOriginal, PickMode } from '../calendar.model';\nexport declare const MONTH_VALUE_ACCESSOR: any;\nexport declare class MonthComponent implements ControlValueAccessor, AfterViewInit {\n    ref: ChangeDetectorRef;\n    componentMode: boolean;\n    month: CalendarMonth;\n    pickMode: PickMode;\n    isSaveHistory: boolean;\n    id: any;\n    readonly: boolean;\n    color: string;\n    change: EventEmitter<CalendarDay[]>;\n    select: EventEmitter<CalendarDay>;\n    selectStart: EventEmitter<CalendarDay>;\n    selectEnd: EventEmitter<CalendarDay>;\n    _date: Array<CalendarDay | null>;\n    _isInit: boolean;\n    _onChanged: Function;\n    _onTouched: Function;\n    readonly DAY_DATE_FORMAT = \"MMMM dd, yyyy\";\n    readonly _isRange: boolean;\n    constructor(ref: ChangeDetectorRef);\n    ngAfterViewInit(): void;\n    readonly value: CalendarDay[];\n    writeValue(obj: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    trackByTime(index: number, item: CalendarOriginal): number;\n    isEndSelection(day: CalendarDay): boolean;\n    getDayLabel(day: CalendarDay): Date;\n    isBetween(day: CalendarDay): boolean;\n    isStartSelection(day: CalendarDay): boolean;\n    isSelected(time: number): boolean;\n    onSelected(item: CalendarDay): void;\n}\n"]}