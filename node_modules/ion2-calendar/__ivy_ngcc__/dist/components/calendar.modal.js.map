{"version":3,"file":"calendar.modal.js","sources":["calendar.modal.js"],"names":[],"mappingsgCAMO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAsB;AACtB;AACA;AACA;AACA","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar angular_1 = require(\"@ionic/angular\");\nvar calendar_service_1 = require(\"../services/calendar.service\");\nvar moment = require(\"moment\");\nvar config_1 = require(\"../config\");\nvar NUM_OF_MONTHS_TO_CREATE = 3;\nvar CalendarModal = /** @class */ (function () {\n    function CalendarModal(_renderer, _elementRef, params, modalCtrl, ref, calSvc) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.params = params;\n        this.modalCtrl = modalCtrl;\n        this.ref = ref;\n        this.calSvc = calSvc;\n        this.ionPage = true;\n        this.datesTemp = [null, null];\n        this._scrollLock = true;\n    }\n    CalendarModal.prototype.ngOnInit = function () {\n        this.init();\n        this.initDefaultDate();\n    };\n    CalendarModal.prototype.ngAfterViewInit = function () {\n        this.findCssClass();\n        if (this._d.canBackwardsSelected)\n            this.backwardsMonth();\n        this.scrollToDefaultDate();\n    };\n    CalendarModal.prototype.init = function () {\n        this._d = this.calSvc.safeOpt(this.options);\n        this._d.showAdjacentMonthDay = false;\n        this.step = this._d.step;\n        if (this.step < this.calSvc.DEFAULT_STEP) {\n            this.step = this.calSvc.DEFAULT_STEP;\n        }\n        this.calendarMonths = this.calSvc.createMonthsByPeriod(moment(this._d.from).valueOf(), this.findInitMonthNumber(this._d.defaultScrollTo) + this.step, this._d);\n    };\n    CalendarModal.prototype.initDefaultDate = function () {\n        var _this = this;\n        var _a = this._d, pickMode = _a.pickMode, defaultDate = _a.defaultDate, defaultDateRange = _a.defaultDateRange, defaultDates = _a.defaultDates;\n        switch (pickMode) {\n            case config_1.pickModes.SINGLE:\n                if (defaultDate) {\n                    this.datesTemp[0] = this.calSvc.createCalendarDay(this._getDayTime(defaultDate), this._d);\n                }\n                break;\n            case config_1.pickModes.RANGE:\n                if (defaultDateRange) {\n                    if (defaultDateRange.from) {\n                        this.datesTemp[0] = this.calSvc.createCalendarDay(this._getDayTime(defaultDateRange.from), this._d);\n                    }\n                    if (defaultDateRange.to) {\n                        this.datesTemp[1] = this.calSvc.createCalendarDay(this._getDayTime(defaultDateRange.to), this._d);\n                    }\n                }\n                break;\n            case config_1.pickModes.MULTI:\n                if (defaultDates && defaultDates.length) {\n                    this.datesTemp = defaultDates.map(function (e) { return _this.calSvc.createCalendarDay(_this._getDayTime(e), _this._d); });\n                }\n                break;\n            default:\n                this.datesTemp = [null, null];\n        }\n    };\n    CalendarModal.prototype.findCssClass = function () {\n        var _this = this;\n        var cssClass = this._d.cssClass;\n        if (cssClass) {\n            cssClass.split(' ').forEach(function (_class) {\n                if (_class.trim() !== '')\n                    _this._renderer.addClass(_this._elementRef.nativeElement, _class);\n            });\n        }\n    };\n    CalendarModal.prototype.onChange = function (data) {\n        var _a = this._d, pickMode = _a.pickMode, autoDone = _a.autoDone;\n        this.datesTemp = data;\n        this.ref.detectChanges();\n        if (pickMode !== config_1.pickModes.MULTI && autoDone && this.canDone()) {\n            this.done();\n        }\n        this.repaintDOM();\n    };\n    CalendarModal.prototype.onCancel = function () {\n        this.modalCtrl.dismiss(null, 'cancel');\n    };\n    CalendarModal.prototype.done = function () {\n        var pickMode = this._d.pickMode;\n        this.modalCtrl.dismiss(this.calSvc.wrapResult(this.datesTemp, pickMode), 'done');\n    };\n    CalendarModal.prototype.canDone = function () {\n        if (!Array.isArray(this.datesTemp)) {\n            return false;\n        }\n        var _a = this._d, pickMode = _a.pickMode, defaultEndDateToStartDate = _a.defaultEndDateToStartDate;\n        switch (pickMode) {\n            case config_1.pickModes.SINGLE:\n                return !!(this.datesTemp[0] && this.datesTemp[0].time);\n            case config_1.pickModes.RANGE:\n                if (defaultEndDateToStartDate) {\n                    return !!(this.datesTemp[0] && this.datesTemp[0].time);\n                }\n                return !!(this.datesTemp[0] && this.datesTemp[1]) && !!(this.datesTemp[0].time && this.datesTemp[1].time);\n            case config_1.pickModes.MULTI:\n                return this.datesTemp.length > 0 && this.datesTemp.every(function (e) { return !!e && !!e.time; });\n            default:\n                return false;\n        }\n    };\n    CalendarModal.prototype.clear = function () {\n        this.datesTemp = [null, null];\n    };\n    CalendarModal.prototype.canClear = function () {\n        return !!this.datesTemp[0];\n    };\n    CalendarModal.prototype.nextMonth = function (event) {\n        var _a;\n        var len = this.calendarMonths.length;\n        var final = this.calendarMonths[len - 1];\n        var nextTime = moment(final.original.time)\n            .add(1, 'M')\n            .valueOf();\n        var rangeEnd = this._d.to ? moment(this._d.to).subtract(1, 'M') : 0;\n        if (len <= 0 || (rangeEnd !== 0 && moment(final.original.time).isAfter(rangeEnd))) {\n            event.target.disabled = true;\n            return;\n        }\n        (_a = this.calendarMonths).push.apply(_a, this.calSvc.createMonthsByPeriod(nextTime, NUM_OF_MONTHS_TO_CREATE, this._d));\n        event.target.complete();\n        this.repaintDOM();\n    };\n    CalendarModal.prototype.backwardsMonth = function () {\n        var _a;\n        var first = this.calendarMonths[0];\n        if (first.original.time <= 0) {\n            this._d.canBackwardsSelected = false;\n            return;\n        }\n        var firstTime = (this.actualFirstTime = moment(first.original.time)\n            .subtract(NUM_OF_MONTHS_TO_CREATE, 'M')\n            .valueOf());\n        (_a = this.calendarMonths).unshift.apply(_a, this.calSvc.createMonthsByPeriod(firstTime, NUM_OF_MONTHS_TO_CREATE, this._d));\n        this.ref.detectChanges();\n        this.repaintDOM();\n    };\n    CalendarModal.prototype.scrollToDate = function (date) {\n        var _this = this;\n        var defaultDateIndex = this.findInitMonthNumber(date);\n        var monthElement = this.monthsEle.nativeElement.children[\"month-\" + defaultDateIndex];\n        var domElemReadyWaitTime = 300;\n        setTimeout(function () {\n            var defaultDateMonth = monthElement ? monthElement.offsetTop : 0;\n            if (defaultDateIndex !== -1 && defaultDateMonth !== 0) {\n                _this.content.scrollByPoint(0, defaultDateMonth, 128);\n            }\n        }, domElemReadyWaitTime);\n    };\n    CalendarModal.prototype.scrollToDefaultDate = function () {\n        this.scrollToDate(this._d.defaultScrollTo);\n    };\n    CalendarModal.prototype.onScroll = function ($event) {\n        var _this = this;\n        if (!this._d.canBackwardsSelected)\n            return;\n        var detail = $event.detail;\n        if (detail.scrollTop <= 200 && detail.velocityY < 0 && this._scrollLock) {\n            this.content.getScrollElement().then(function (scrollElem) {\n                _this._scrollLock = !1;\n                var heightBeforeMonthPrepend = scrollElem.scrollHeight;\n                _this.backwardsMonth();\n                setTimeout(function () {\n                    var heightAfterMonthPrepend = scrollElem.scrollHeight;\n                    _this.content.scrollByPoint(0, heightAfterMonthPrepend - heightBeforeMonthPrepend, 0).then(function () {\n                        _this._scrollLock = !0;\n                    });\n                }, 180);\n            });\n        }\n    };\n    /**\n     * In some older Safari versions (observed at Mac's Safari 10.0), there is an issue where style updates to\n     * shadowRoot descendants don't cause a browser repaint.\n     * See for more details: https://github.com/Polymer/polymer/issues/4701\n     */\n    CalendarModal.prototype.repaintDOM = function () {\n        var _this = this;\n        return this.content.getScrollElement().then(function (scrollElem) {\n            // Update scrollElem to ensure that height of the container changes as Months are appended/prepended\n            scrollElem.style.zIndex = '2';\n            scrollElem.style.zIndex = 'initial';\n            // Update monthsEle to ensure selected state is reflected when tapping on a day\n            _this.monthsEle.nativeElement.style.zIndex = '2';\n            _this.monthsEle.nativeElement.style.zIndex = 'initial';\n        });\n    };\n    CalendarModal.prototype.findInitMonthNumber = function (date) {\n        var startDate = this.actualFirstTime ? moment(this.actualFirstTime) : moment(this._d.from);\n        var defaultScrollTo = moment(date);\n        var isAfter = defaultScrollTo.isAfter(startDate);\n        if (!isAfter)\n            return -1;\n        if (this.showYearPicker) {\n            startDate = moment(new Date(this.year, 0, 1));\n        }\n        return defaultScrollTo.diff(startDate, 'month');\n    };\n    CalendarModal.prototype._getDayTime = function (date) {\n        return moment(moment(date).format('YYYY-MM-DD')).valueOf();\n    };\n    CalendarModal.prototype._monthFormat = function (date) {\n        return moment(date).format(this._d.monthFormat.replace(/y/g, 'Y'));\n    };\n    CalendarModal.prototype.trackByIndex = function (index, momentDate) {\n        return momentDate.original ? momentDate.original.time : index;\n    };\n    __decorate([\n        core_1.ViewChild(angular_1.IonContent),\n        __metadata(\"design:type\", angular_1.IonContent)\n    ], CalendarModal.prototype, \"content\", void 0);\n    __decorate([\n        core_1.ViewChild('months'),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], CalendarModal.prototype, \"monthsEle\", void 0);\n    __decorate([\n        core_1.HostBinding('class.ion-page'),\n        __metadata(\"design:type\", Object)\n    ], CalendarModal.prototype, \"ionPage\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], CalendarModal.prototype, \"options\", void 0);\n    CalendarModal = __decorate([\n        core_1.Component({\n            selector: 'ion-calendar-modal',\n            template: \"\\n    <ion-header>\\n      <ion-toolbar [color]=\\\"_d.color\\\">\\n          <ion-buttons slot=\\\"start\\\">\\n              <ion-button type='button' slot=\\\"icon-only\\\" fill=\\\"clear\\\" (click)=\\\"onCancel()\\\">\\n              <span *ngIf=\\\"_d.closeLabel !== '' && !_d.closeIcon\\\">{{ _d.closeLabel }}</span>\\n              <ion-icon *ngIf=\\\"_d.closeIcon\\\" name=\\\"close\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n\\n          <ion-title>{{ _d.title }}</ion-title>\\n\\n          <ion-buttons slot=\\\"end\\\">\\n            <ion-button type='button' *ngIf=\\\"!!_d.clearLabel\\\" fill=\\\"clear\\\" [disabled]=\\\"!canClear()\\\" (click)=\\\"clear()\\\">\\n              <span *ngIf=\\\"_d.clearLabel !== ''\\\">{{ _d.clearLabel }}</span>\\n            </ion-button>\\n            <ion-button type='button' slot=\\\"icon-only\\\" *ngIf=\\\"!_d.autoDone\\\" fill=\\\"clear\\\" [disabled]=\\\"!canDone()\\\" (click)=\\\"done()\\\">\\n              <span *ngIf=\\\"_d.doneLabel !== '' && !_d.doneIcon\\\">{{ _d.doneLabel }}</span>\\n              <ion-icon *ngIf=\\\"_d.doneIcon\\\" name=\\\"checkmark\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n      </ion-toolbar>\\n\\n      <ng-content select=\\\"[sub-header]\\\"></ng-content>\\n\\n      <ion-calendar-week\\n        [color]=\\\"_d.color\\\"\\n        [weekArray]=\\\"_d.weekdays\\\"\\n        [weekStart]=\\\"_d.weekStart\\\">\\n      </ion-calendar-week>\\n\\n    </ion-header>\\n\\n    <ion-content (ionScroll)=\\\"onScroll($event)\\\" class=\\\"calendar-page\\\" [scrollEvents]=\\\"true\\\"\\n                 [ngClass]=\\\"{'multi-selection': _d.pickMode === 'multi'}\\\">\\n\\n      <div #months>\\n        <ng-template ngFor let-month [ngForOf]=\\\"calendarMonths\\\" [ngForTrackBy]=\\\"trackByIndex\\\" let-i=\\\"index\\\">\\n          <div class=\\\"month-box\\\" [attr.id]=\\\"'month-' + i\\\">\\n            <h4 class=\\\"text-center month-title\\\">{{ _monthFormat(month.original.date) }}</h4>\\n            <ion-calendar-month [month]=\\\"month\\\"\\n                                [pickMode]=\\\"_d.pickMode\\\"\\n                                [isSaveHistory]=\\\"_d.isSaveHistory\\\"\\n                                [id]=\\\"_d.id\\\"\\n                                [color]=\\\"_d.color\\\"\\n                                (change)=\\\"onChange($event)\\\"\\n                                [(ngModel)]=\\\"datesTemp\\\">\\n            </ion-calendar-month>\\n          </div>\\n        </ng-template>\\n\\n      </div>\\n\\n      <ion-infinite-scroll threshold=\\\"25%\\\" (ionInfinite)=\\\"nextMonth($event)\\\">\\n        <ion-infinite-scroll-content></ion-infinite-scroll-content>\\n      </ion-infinite-scroll>\\n\\n    </ion-content>\\n  \",\n            styles: [\":host ion-select {\\n  max-width: unset; }\\n  :host ion-select .select-icon > .select-icon-inner,\\n  :host ion-select .select-text {\\n    color: #fff !important; }\\n  :host ion-select.select-ios {\\n    max-width: unset; }\\n\\n:host .calendar-page {\\n  background-color: #fbfbfb; }\\n\\n:host .month-box {\\n  display: inline-block;\\n  width: 100%;\\n  padding-bottom: 1em;\\n  border-bottom: 1px solid #f1f1f1; }\\n\\n:host h4 {\\n  font-weight: 400;\\n  font-size: 1.1rem;\\n  display: block;\\n  text-align: center;\\n  margin: 1rem 0 0;\\n  color: #929292; }\\n\"]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.Renderer2,\n            core_1.ElementRef,\n            angular_1.NavParams,\n            angular_1.ModalController,\n            core_1.ChangeDetectorRef,\n            calendar_service_1.CalendarService])\n    ], CalendarModal);\n    return CalendarModal;\n}());\nexports.CalendarModal = CalendarModal;\n"]}