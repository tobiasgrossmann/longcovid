"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[382],{382:(m,o,n)=>{n.r(o),n.d(o,{CapacitorSQLiteWeb:()=>s});var i=n(5861),l=n(7423);class s extends l.Uw{constructor(){super(...arguments),this.sqliteEl=null,this.isStoreOpen=!1}initWebStore(){var t=this;return(0,i.Z)(function*(){return yield customElements.whenDefined("jeep-sqlite"),t.sqliteEl=document.querySelector("jeep-sqlite"),null!=t.sqliteEl?(t.sqliteEl.addEventListener("jeepSqliteImportProgress",e=>{t.notifyListeners("sqliteImportProgressEvent",e.detail)}),t.sqliteEl.addEventListener("jeepSqliteExportProgress",e=>{t.notifyListeners("sqliteExportProgressEvent",e.detail)}),t.isStoreOpen||(t.isStoreOpen=yield t.sqliteEl.isStoreOpen()),Promise.resolve()):Promise.reject("InitWeb: this.sqliteEl is null")})()}saveToStore(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.saveToStore(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}echo(t){var e=this;return(0,i.Z)(function*(){if(null!=e.sqliteEl)return yield e.sqliteEl.echo(t);throw e.unimplemented("Not implemented on web.")})()}isSecretStored(){var t=this;return(0,i.Z)(function*(){throw t.unimplemented("Not implemented on web.")})()}setEncryptionSecret(t){var e=this;return(0,i.Z)(function*(){throw console.log("setEncryptionSecret",t),e.unimplemented("Not implemented on web.")})()}changeEncryptionSecret(t){var e=this;return(0,i.Z)(function*(){throw console.log("changeEncryptionSecret",t),e.unimplemented("Not implemented on web.")})()}getNCDatabasePath(t){var e=this;return(0,i.Z)(function*(){throw console.log("getNCDatabasePath",t),e.unimplemented("Not implemented on web.")})()}createNCConnection(t){var e=this;return(0,i.Z)(function*(){throw console.log("createNCConnection",t),e.unimplemented("Not implemented on web.")})()}closeNCConnection(t){var e=this;return(0,i.Z)(function*(){throw console.log("closeNCConnection",t),e.unimplemented("Not implemented on web.")})()}isNCDatabase(t){var e=this;return(0,i.Z)(function*(){throw console.log("isNCDatabase",t),e.unimplemented("Not implemented on web.")})()}createConnection(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.createConnection(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}open(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.open(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}closeConnection(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.closeConnection(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}getUrl(){var t=this;return(0,i.Z)(function*(){throw t.unimplemented("Not implemented on web.")})()}getVersion(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.getVersion(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}checkConnectionsConsistency(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");try{const r=yield e.sqliteEl.checkConnectionsConsistency(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}close(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.close(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}execute(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.execute(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}executeSet(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.executeSet(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}run(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.run(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}query(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.query(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}isDBExists(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.isDBExists(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}isDBOpen(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.isDBOpen(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}isDatabase(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(e.isStoreOpen||(e.isStoreOpen=yield e.sqliteEl.isStoreOpen()),!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.isDatabase(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}isTableExists(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.isTableExists(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}deleteDatabase(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.deleteDatabase(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}isJsonValid(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(e.isStoreOpen||(e.isStoreOpen=yield e.sqliteEl.isStoreOpen()),!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.isJsonValid(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}importFromJson(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(e.isStoreOpen||(e.isStoreOpen=yield e.sqliteEl.isStoreOpen()),!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.importFromJson(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}exportToJson(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.exportToJson(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}createSyncTable(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.createSyncTable(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}setSyncDate(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.setSyncDate(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}getSyncDate(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const r=yield e.sqliteEl.getSyncDate(t);return Promise.resolve(r)}catch(r){return Promise.reject(`${r}`)}})()}addUpgradeStatement(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.addUpgradeStatement(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}copyFromAssets(t){var e=this;return(0,i.Z)(function*(){if(null==e.sqliteEl)throw e.unimplemented("Not implemented on web.");if(!e.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{return yield e.sqliteEl.copyFromAssets(t),Promise.resolve()}catch(r){return Promise.reject(`${r}`)}})()}getDatabaseList(){var t=this;return(0,i.Z)(function*(){if(null==t.sqliteEl)throw t.unimplemented("Not implemented on web.");if(t.isStoreOpen||(t.isStoreOpen=yield t.sqliteEl.isStoreOpen()),!t.isStoreOpen)return Promise.reject('Store "jeepSqliteStore" failed to open');try{const e=yield t.sqliteEl.getDatabaseList();return Promise.resolve(e)}catch(e){return Promise.reject(`${e}`)}})()}getMigratableDbList(t){var e=this;return(0,i.Z)(function*(){throw console.log("getMigratableDbList",t),e.unimplemented("Not implemented on web.")})()}addSQLiteSuffix(t){var e=this;return(0,i.Z)(function*(){throw console.log("addSQLiteSuffix",t),e.unimplemented("Not implemented on web.")})()}deleteOldDatabases(t){var e=this;return(0,i.Z)(function*(){throw console.log("deleteOldDatabases",t),e.unimplemented("Not implemented on web.")})()}}}}]);